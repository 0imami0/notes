{"ast":null,"code":"var _jsxFileName = \"/home/ima/Projects/notesDj/frontend/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  let getNote = async () => {\n    if (id === 'new') return;\n    let response = await fetch(`/api/notes/${id}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    navigate('/');\n  };\n\n  let handleSubmit = () => {\n    if (id !== 'new' && !note.body) {\n      deleteNote();\n    } else if (id !== 'new') {\n      updateNote();\n    } else if (id == 'new' && note !== null) {\n      createNote();\n    }\n\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NotePage, \"UsVjU7Be0kCDVdSePH0/u2Te9u4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","ReactComponent","ArrowLeft","Link","NotePage","id","navigate","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handleSubmit","e","target","value"],"sources":["/home/ima/Projects/notesDj/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport{ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\n\nconst NotePage = () => {\n\n\tlet {id} = useParams()\n\tlet navigate = useNavigate()\n\n\tlet [note, setNote] = useState(null)\n\n\tuseEffect(() => {\n\t\tgetNote()\n\t}, [id])\n\n\n\tlet getNote = async() => {\n\t\tif (id === 'new') return\n\n\t\tlet response = await fetch(`/api/notes/${id}`)\n\t\tlet data = await response.json()\n\t\tsetNote(data)\n\t}\n\n\tlet createNote = async () => {\n\t\tfetch(`/api/notes/create/`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(note)\n\t\t})\t\n\t}\n\n\tlet updateNote = async () => {\n\t\tfetch(`/api/notes/${id}/update/`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(note)\n\t\t})\t\n\t}\n\n\tlet deleteNote = async () => {\n\t\tfetch(`/api/notes/${id}/delete/`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type' : 'application/json'\n\t\t\t}\n\t\t})\n\t\tnavigate('/')\n\t}\n\n\tlet handleSubmit = ()=> {\n\t\tif(id !== 'new' && !note.body){\n\t\t\tdeleteNote()\n\t\t}else if(id !== 'new'){\n\t\t\tupdateNote()\n\t\t}else if(id == 'new' && note !== null){\n\t\t\tcreateNote()\n\t\t}\n\t\tnavigate('/')\n\t}\n\t\n\n\n\treturn (\n\t\t<div className='note'>\n\t\t\t<div className='note-header'>\n\t\t\t\t<h3>\n\t\t\t\t\t<ArrowLeft onClick={handleSubmit}/>\n\t\t\t\t</h3>\n\t\t\t\t{id !== 'new' ? (\n\t\t\t\t\t<button onClick={deleteNote}>Delete</button>\n\t\t\t\t): (\n\t\t\t\t\t<button onClick={handleSubmit}>Done</button>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<textarea onChange={(e) => { setNote({ ...note, 'body': e.target.value })}} defaultValue={note?.body}></textarea>\n\t\t</div>\n\t)\n}\n\nexport default NotePage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAAOC,cAAc,IAAIC,SAAzB,QAAyC,0BAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEtB,IAAI;IAACC;EAAD,IAAON,SAAS,EAApB;EACA,IAAIO,QAAQ,GAAGN,WAAW,EAA1B;EAEA,IAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAA9B;EAEAD,SAAS,CAAC,MAAM;IACfY,OAAO;EACP,CAFQ,EAEN,CAACJ,EAAD,CAFM,CAAT;;EAKA,IAAII,OAAO,GAAG,YAAW;IACxB,IAAIJ,EAAE,KAAK,KAAX,EAAkB;IAElB,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaN,EAAG,EAAlB,CAA1B;IACA,IAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAL,OAAO,CAACI,IAAD,CAAP;EACA,CAND;;EAQA,IAAIE,UAAU,GAAG,YAAY;IAC5BH,KAAK,CAAE,oBAAF,EAAuB;MAC3BI,MAAM,EAAE,MADmB;MAE3BC,OAAO,EAAE;QACR,gBAAgB;MADR,CAFkB;MAK3BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;IALqB,CAAvB,CAAL;EAOA,CARD;;EAUA,IAAIa,UAAU,GAAG,YAAY;IAC5BT,KAAK,CAAE,cAAaN,EAAG,UAAlB,EAA6B;MACjCU,MAAM,EAAE,KADyB;MAEjCC,OAAO,EAAE;QACR,gBAAgB;MADR,CAFwB;MAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;IAL2B,CAA7B,CAAL;EAOA,CARD;;EAUA,IAAIc,UAAU,GAAG,YAAY;IAC5BV,KAAK,CAAE,cAAaN,EAAG,UAAlB,EAA6B;MACjCU,MAAM,EAAE,QADyB;MAEjCC,OAAO,EAAE;QACR,gBAAiB;MADT;IAFwB,CAA7B,CAAL;IAMAV,QAAQ,CAAC,GAAD,CAAR;EACA,CARD;;EAUA,IAAIgB,YAAY,GAAG,MAAK;IACvB,IAAGjB,EAAE,KAAK,KAAP,IAAgB,CAACE,IAAI,CAACU,IAAzB,EAA8B;MAC7BI,UAAU;IACV,CAFD,MAEM,IAAGhB,EAAE,KAAK,KAAV,EAAgB;MACrBe,UAAU;IACV,CAFK,MAEA,IAAGf,EAAE,IAAI,KAAN,IAAeE,IAAI,KAAK,IAA3B,EAAgC;MACrCO,UAAU;IACV;;IACDR,QAAQ,CAAC,GAAD,CAAR;EACA,CATD;;EAaA,oBACC;IAAK,SAAS,EAAC,MAAf;IAAA,wBACC;MAAK,SAAS,EAAC,aAAf;MAAA,wBACC;QAAA,uBACC,QAAC,SAAD;UAAW,OAAO,EAAEgB;QAApB;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QADD,EAIEjB,EAAE,KAAK,KAAP,gBACA;QAAQ,OAAO,EAAEgB,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,gBAGA;QAAQ,OAAO,EAAEC,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAYC;MAAU,QAAQ,EAAGC,CAAD,IAAO;QAAEf,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAW,QAAQgB,CAAC,CAACC,MAAF,CAASC;QAA5B,CAAD,CAAP;MAA6C,CAA1E;MAA4E,YAAY,EAAElB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;IAAhG;MAAA;MAAA;MAAA;IAAA,QAZD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAgBA,CA/ED;;GAAMb,Q;UAEML,S,EACIC,W;;;KAHVI,Q;AAiFN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}